    
    /**
     * YouTube URL validation and handling functions
     */
    private function validate_youtube_url($url) {
        if (empty($url)) {
            return array('valid' => true, 'message' => '', 'video_id' => '');
        }
        
        $url = trim($url);
        
        // YouTube URL patterns
        $patterns = array(
            '/^https?:\/\/(?:www\.)?youtube\.com\/watch\?v=([a-zA-Z0-9_-]{11})/',
            '/^https?:\/\/(?:www\.)?youtube\.com\/shorts\/([a-zA-Z0-9_-]{11})/',
            '/^https?:\/\/youtu\.be\/([a-zA-Z0-9_-]{11})/',
            '/^https?:\/\/(?:www\.)?youtube\.com\/embed\/([a-zA-Z0-9_-]{11})/'
        );
        
        foreach ($patterns as $pattern) {
            if (preg_match($pattern, $url, $matches)) {
                return array(
                    'valid' => true, 
                    'message' => 'Valid YouTube URL',
                    'video_id' => $matches[1]
                );
            }
        }
        
        return array(
            'valid' => false, 
            'message' => 'Invalid YouTube URL format. Please use a valid YouTube video or Shorts URL.',
            'video_id' => ''
        );
    }

    private function sanitize_youtube_url($url) {
        if (empty($url)) {
            return '';
        }
        
        $validation = $this->validate_youtube_url($url);
        if (!$validation['valid']) {
            error_log('Klump Product Ads: Invalid YouTube URL: ' . $url);
            return '';
        }
        
        // Convert to embed format for consistency
        $embed_url = 'https://www.youtube.com/embed/' . $validation['video_id'];
        error_log('Klump Product Ads: YouTube URL sanitized from ' . $url . ' to ' . $embed_url);
        return $embed_url;
    }

    private function get_youtube_video_id($url) {
        $validation = $this->validate_youtube_url($url);
        return $validation['video_id'];
    }
